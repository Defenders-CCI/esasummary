layout(xaxis = list(title = "Number of Listed Species per County", type = "log"),
yaxis = list(title = "Percentile of Counties"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1 ),
#text = ~paste("% of counties contain", "listed species"),
hoverinfo = "x+y")%>%
layout(xaxis = list(title = "Number of Counties in Species' Range", type = "log"),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0, end = 3102.5, size = 0.5 ),
#text = ~paste("% of counties contain", "listed species"),
hoverinfo = "x+y")%>%
layout(xaxis = list(title = "Number of Counties in Species' Range", type = "log"),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 0.5 ),
#text = ~paste("% of counties contain", "listed species"),
hoverinfo = "x+y")%>%
layout(xaxis = list(title = "Number of Counties in Species' Range", type = "log"),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.9, end = 3102.9, size = 1),
#text = ~paste("% of counties contain", "listed species"),
hoverinfo = "x+y")%>%
layout(xaxis = list(title = "Number of Counties in Species' Range", type = "log"),
yaxis = list(title = "Percentile of Species"))
runApp('inst/listings-summary')
plot_ly(arrange(counties, count), x = ~count)%>%
add_lines(y = ~round(row_number(count)/nrow(counties), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(counties),3)*100,"% of counties contain", count, "or fewer species"),
hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram",
#text = ~paste("% of counties contain", "listed species"),
hoverinfo = "none")%>%
layout(xaxis = list(title = "Number of Listed Species per County", type = "log", tickvals = c(0, 10, 100, 1000)),
yaxis = list(title = "Percentile of Counties"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
#text = ~paste("% of counties contain", "listed species"),
hoverinfo = "x+y")%>%
layout(xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 5000)),
yaxis = list(title = "Percentile of Species"))
runApp('inst/listings-summary')
runApp('inst/listings-summary')
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", species$count, "listed species"),
hoverinfo = "text")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", species$count, "listed species"),
hoverinfo = "x+text")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", species$count, "listed species"),
hoverinfo = "text+x")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", species$count, "listed species"),
hoverinfo = "x", hovermode = y)%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", unique(count), "listed species"),
hoverinfo = "text")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", seq(1,max(species$count),1), "listed species"),
hoverinfo = "text")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", seq(1,max(species$count),1), "listed species"),
hoverinfo = "text")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", seq(1,max(species$count)+1,1), "listed species"),
hoverinfo = "text")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", seq(1,max(species$count)-1,1), "listed species"),
hoverinfo = "text")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", x, "listed species"),
hoverinfo = "text")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
py<-plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", x, "listed species"),
hoverinfo = "text")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
py<-plot_ly(arrange(species, count), x = ~count, source = "sp_dist")%>%
add_lines(y = ~round(row_number(count)/nrow(species), 3), name = "Cummulative",
type = "scatter", mode = "lines",
text = ~paste(round(row_number(count)/nrow(species),3)*100,"% of species occur in", count, "or fewer counties"), hoverinfo = "text")%>%
add_histogram(histnorm = "probability", name = "Histogram", xbins = list(start = 0.5, end = 3102.5, size = 1),
text = ~paste("% of counties contain", "listed species"),
hoverinfo = "x", hovermode = "y")%>%
layout(title = "Listed Species Range Sizes",
xaxis = list(title = "Number of Counties in Species' Range", type = "log", tickvals = c(0, 5, 10, 50, 100, 500, 1000, 3000)),
yaxis = list(title = "Percentile of Species"))
py
runApp('inst/listings-summary')
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(legend = list(x = 0.5, y = -0.1))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(legend = list(x = 0.5, y = -0.3))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(legend = list(x = 0.5, y = -0.5))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0.5, y = -0.5))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0.1, y = -0.5))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0.1, y = -0.5, bgcolor = NULL))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0.1, y = -0.5, bgcolor = "none"))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0, y = -0.5, bgcolor = "none"))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0, y = -0.7, bgcolor = "none"))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0, y = -0.6, bgcolor = "none"))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0, y = -0.5, bgcolor = "none"))
runApp('inst/listings-summary')
getwd()
runApp('inst/listings-summary')
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
showlegend = FALSE)
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0.1, y = 0.9))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0.05, y = 0.95))
plot_ly(ungroup(years), x = ~Year, y = ~count)%>%
add_trace(type = "scatter", mode = "lines", color = ~Status, colors = list_pal)%>%
add_trace(data = totals, x = ~Year, y = ~total,
type = "scatter", mode = "lines", name = "Total", line = list(color = "black"))%>%
layout(title = "Timeline of ESA Listings",
xaxis = list(title = "Year"),
yaxis = list(title = "Number of Listings"),
legend = list(x = 0.05, y = 0.95, bordercolor = "black", borderwidth = 1))
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
hchart(summarise(group_by(regions, Group, Status), n = sum(count)),
type = "column", x = Group, y = n, group = Status)%>%
hc_title(text = "ESA Listings by Taxonomic Group")
hc_yAxis(title = list(text = "Number of Listed Species"),
stlye = list(fontcolor="black")
stackLabels = list(enabled = "true"))%>%
hc_xAxis(title = list(text = "Taxanomic Group"))%>%
hc_plotOptions(column = list(stacking = "normal"))%>%
hc_tooltip(headerFormat = "<b>{point.x}</b><br>", pointFormat = "{series.name}: {point.y}<br>Total: {point.stackTotal}")%>%
hc_colors(list_pal)
hchart(summarise(group_by(regions, Group, Status), n = sum(count)),
type = "column", x = Group, y = n, group = Status)%>%
hc_title(text = "ESA Listings by Taxonomic Group")%>%
hc_yAxis(title = list(text = "Number of Listed Species"),
stlye = list(fontcolor="black"),
stackLabels = list(enabled = "true"))%>%
hc_xAxis(title = list(text = "Taxanomic Group"))%>%
hc_plotOptions(column = list(stacking = "normal"))%>%
hc_tooltip(headerFormat = "<b>{point.x}</b><br>", pointFormat = "{series.name}: {point.y}<br>Total: {point.stackTotal}")%>%
hc_colors(list_pal)
hchart(summarise(group_by(regions, Group, Status), n = sum(count)),
type = "column", x = Group, y = n, group = Status)%>%
hc_title(text = "ESA Listings by Taxonomic Group")%>%
hc_yAxis(title = list(text = "Number of Listed Species"),
labels = list(style = list(color = "black")),
stackLabels = list(enabled = "true"))%>%
hc_xAxis(title = list(text = "Taxanomic Group"))%>%
hc_plotOptions(column = list(stacking = "normal"))%>%
hc_tooltip(headerFormat = "<b>{point.x}</b><br>", pointFormat = "{series.name}: {point.y}<br>Total: {point.stackTotal}")%>%
hc_colors(list_pal)
hchart(summarise(group_by(regions, Group, Status), n = sum(count)),
type = "column", x = Group, y = n, group = Status)%>%
hc_title(text = "ESA Listings by Taxonomic Group")%>%
hc_yAxis(title = list(text = "Number of Listed Species", color = "black"),
labels = list(style = list(color = "black")),
stackLabels = list(enabled = "true"))%>%
hc_xAxis(title = list(text = "Taxanomic Group"))%>%
hc_plotOptions(column = list(stacking = "normal"))%>%
hc_tooltip(headerFormat = "<b>{point.x}</b><br>", pointFormat = "{series.name}: {point.y}<br>Total: {point.stackTotal}")%>%
hc_colors(list_pal)
hchart(summarise(group_by(regions, Group, Status), n = sum(count)),
type = "column", x = Group, y = n, group = Status)%>%
hc_title(text = "ESA Listings by Taxonomic Group")%>%
hc_yAxis(title = list(text = "Number of Listed Species", style = list(color = "black")),
labels = list(style = list(color = "black")),
stackLabels = list(enabled = "true"))%>%
hc_xAxis(title = list(text = "Taxanomic Group"))%>%
hc_plotOptions(column = list(stacking = "normal"))%>%
hc_tooltip(headerFormat = "<b>{point.x}</b><br>", pointFormat = "{series.name}: {point.y}<br>Total: {point.stackTotal}")%>%
hc_colors(list_pal)
hchart(summarise(group_by(regions, Lead_Region, Status), n = sum(count)),
type = "column", x = Lead_Region, y = n, group = Status)%>%
hc_title(text = "ESA Listings by FWS Region")%>%
hc_yAxis(title = list(text = "Number of Listed Species", style = list(color = "black")),
labels = list(style = list(color = "black")),
stackLabels = list(enabled = "true"))%>%
hc_xAxis(categories = c("Reg. 1", "Reg. 2", "Reg.3", "Reg. 4", "Reg. 5", "Reg. 6", "Reg. 7", "Reg. 8", "NMFS"))%>%
hc_plotOptions(column = list(stacking = "normal"))%>%
hc_tooltip(headerFormat = "<b>{point.x}</b><br>", pointFormat = "{series.name}: {point.y}<br>Total: {point.stackTotal}")%>%
hc_colors(list_pal)
hchart(summarise(group_by(regions, Lead_Region, Status), n = sum(count)),
type = "column", x = Lead_Region, y = n, group = Status)%>%
hc_title(text = "ESA Listings by FWS Region")%>%
hc_yAxis(title = list(text = "Number of Listed Species", style = list(color = "black")),
labels = list(style = list(color = "black")),
stackLabels = list(enabled = "true"))%>%
hc_xAxis(categories = c("Reg. 1", "Reg. 2", "Reg.3", "Reg. 4", "Reg. 5", "Reg. 6", "Reg. 7", "Reg. 8", "NMFS"),
title = list(text = "FWS Region", style = list(color = "black")),
labels = list(style = list(color = "black")))%>%
hc_plotOptions(column = list(stacking = "normal"))%>%
hc_tooltip(headerFormat = "<b>{point.x}</b><br>", pointFormat = "{series.name}: {point.y}<br>Total: {point.stackTotal}")%>%
hc_colors(list_pal)
hchart(summarise(group_by(regions, Group, Status), n = sum(count)),
type = "column", x = Group, y = n, group = Status)%>%
hc_title(text = "ESA Listings by Taxonomic Group")%>%
hc_yAxis(title = list(text = "Number of Listed Species", style = list(color = "black")),
labels = list(style = list(color = "black")),
stackLabels = list(enabled = "true"))%>%
hc_xAxis(title = list(text = "Taxanomic Group", style = list(color = "black")),
labels = list(style = list(color = "black")))%>%
hc_plotOptions(column = list(stacking = "normal"))%>%
hc_tooltip(headerFormat = "<b>{point.x}</b><br>", pointFormat = "{series.name}: {point.y}<br>Total: {point.stackTotal}")%>%
hc_colors(list_pal)
runApp('inst/listings-summary')
highchart()%>%
hc_add_series_treemap(tm_rg, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1,
borderColor = "white",
borderWidth = 5,
dataLabels = list(enabled = "true",
align = "left",
verticalAlign = "top")),
list(level = 2,
borderColor = "grey",
borderWidth = 3,
dataLabels = list(enabled = "false",
align = "center",
verticalAlign = "middle"))))
highchart()%>%
hc_add_series_treemap(tm_rg, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1,
borderColor = "white",
borderWidth = 5,
dataLabels = list(enabled = "true",
align = "left",
verticalAlign = "top")),
list(level = 2,
borderColor = "grey",
borderWidth = 3,
dataLabels = list(enabled = "FALSE",
align = "center",
verticalAlign = "middle"))))
highchart()%>%
hc_add_series_treemap(tm_rg, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1,
borderColor = "white",
borderWidth = 5,
dataLabels = list(enabled = "true",
align = "left",
verticalAlign = "top")),
list(level = 2,
borderColor = "grey",
borderWidth = 3,
dataLabels = list(enabled = FALSE,
align = "center",
verticalAlign = "middle"))))
highchart()%>%
hc_add_series_treemap(tm_rg, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1,
borderColor = "white",
borderWidth = 5,
dataLabels = list(enabled = "true",
align = "left",
verticalAlign = "top",
style = list(fontSize = "14px"))),
list(level = 2,
borderColor = "grey",
borderWidth = 3,
dataLabels = list(enabled = FALSE,
align = "center",
verticalAlign = "middle"))))
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
shiny::runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
shiny::runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
tm_tx <- treemap(dat1,
index = c("Lead_Region", "Status"),
vSize = "count", type = "categorical", vColor = "Status",
fontsize.labels = c(16, 0),
align.labels = list(c("left","top"), c("center","center")),
bg.labels = 0, palette = list_pal[names(name_pal)%in%dat1$Status])
tm_tx$tm$color[tm_tx$tm$level == 1] <- NA
list_pal
name_pal
unique(regions$Lead_Region)
unique(regions$Group)
unique(regions$Status)
View(TECP_date)
dat1 <- filter(regions,grepl("", Group))
tm_tx <- treemap(dat1,
index = c("Lead_Region", "Status"),
vSize = "count", type = "categorical", vColor = "Status",
fontsize.labels = c(16, 0),
align.labels = list(c("left","top"), c("center","center")),
bg.labels = 0, palette = list_pal[names(name_pal)%in%dat1$Status])
tm_tx$tm$color[tm_tx$tm$level == 1] <- NA
dat1 <- filter(regions,grepl("Birds", Group))
tm_tx <- treemap(dat1,
index = c("Lead_Region", "Status"),
vSize = "count", type = "categorical", vColor = "Status",
fontsize.labels = c(16, 0),
align.labels = list(c("left","top"), c("center","center")),
bg.labels = 0, palette = list_pal[names(name_pal)%in%dat1$Status])
tm_tx$tm$color[tm_tx$tm$level == 1] <- NA
tm_tx <- treemap(regions,
index = c("Lead_Region", "Status"),
vSize = "count", type = "categorical", vColor = "Status",
fontsize.labels = c(16, 0),
align.labels = list(c("left","top"), c("center","center")),
bg.labels = 0, palette = list_pal[names(name_pal)%in%dat1$Status])
tm_tx$tm$color[tm_tx$tm$level == 1] <- NA
regions
