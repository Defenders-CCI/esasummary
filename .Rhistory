hc_add_series_treemap(tm_tx, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1, borderWidth = 10)))%>%
hc_title(text = "ESA Listings")%>%
hc_tooltip(pointFormat = "Region {point.name}:<br>
Listings: {point.value}")
highchart()%>%
hc_add_series_treemap(tm_tx, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1, borderColor = "black", borderWidth = 5)))%>%
hc_title(text = "ESA Listings")%>%
hc_tooltip(pointFormat = "Region {point.name}:<br>
Listings: {point.value}")
highchart()%>%
hc_add_series_treemap(tm_tx, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1,
borderColor = "black",
borderWidth = 5,
dataLabels = list(enabled = "true",
align = "left",
veticalAlign = "top")),
level = 2,
borderColor = "grey",
borderWidth = 3,
dataLabels = list(enabled = "true",
align = "center",
verticalAlign = "center")))%>%
hc_title(text = "ESA Listings")%>%
hc_tooltip(pointFormat = "Region {point.name}:<br>
Listings: {point.value}")
highchart()%>%
hc_add_series_treemap(tm_tx, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1,
borderColor = "black",
borderWidth = 5,
dataLabels = list(enabled = "true",
align = "left",
veticalAlign = "top")),
list(level = 2,
borderColor = "grey",
borderWidth = 3,
dataLabels = list(enabled = "true",
align = "center",
verticalAlign = "center"))))%>%
hc_title(text = "ESA Listings")%>%
hc_tooltip(pointFormat = "Region {point.name}:<br>
Listings: {point.value}")
highchart()%>%
hc_add_series_treemap(tm_tx, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1,
borderColor = "black",
borderWidth = 5,
dataLabels = list(enabled = "true",
align = "left",
verticalAlign = "top")),
list(level = 2,
borderColor = "grey",
borderWidth = 3,
dataLabels = list(enabled = "true",
align = "center",
verticalAlign = "center"))))%>%
hc_title(text = "ESA Listings")%>%
hc_tooltip(pointFormat = "Region {point.name}:<br>
Listings: {point.value}")
highchart()%>%
hc_add_series_treemap(tm_tx, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1,
borderColor = "black",
borderWidth = 5,
dataLabels = list(enabled = "true",
align = "left",
verticalAlign = "top")),
list(level = 2,
borderColor = "grey",
borderWidth = 3,
dataLabels = list(enabled = "true",
align = "center",
verticalAlign = "middle"))))%>%
hc_title(text = "ESA Listings")%>%
hc_tooltip(pointFormat = "Region {point.name}:<br>
Listings: {point.value}")
head(tm_rg$tm)
head(tm_rtx$tm)
head(tm_tx$tm)
tm_tx$tm$Lead_Region[tm_tx$tm$Lead_Region !="NMFS"] <- paste("Region",tm_tx$tm$Lead_Region[tm_tx$tm$Lead_Region !="NMFS"])
head(tm_tx$tm$Lead_Region[tm_tx$tm$Lead_Region !="NMFS"])
head(tm_tx$tm[tm_tx$tm$Lead_Region !="NMFS"])
head(tm_tx$tm[tm_tx$tm$Lead_Region !="NMFS",])
tm_tx$tm$Lead_Region[which(tm_tx$tm,Lead_Region !="NMFS")] <- paste("Region",tm_tx$tm$Lead_Region[which(tm_tx$tm,Lead_Region !="NMFS")])
head(tm_tx$tm)
tm_tx <- treemap(regions,
index = c("Lead_Region", "Status"),
vSize = "count", type = "categorical", vColor = "Status",
fontsize.labels = c(16, 0),
align.labels = list(c("left","top"), c("center","center")),
bg.labels = 0, palette = list_pal)
tm_tx$tm$color[tm_tx$tm$level == 1] <- NA
tm_tx$tm$Lead_Region[which(tm_tx$tm,Lead_Region !="NMFS")] <- paste("Region",tm_tx$tm$Lead_Region[which(tm_tx$tm,Lead_Region !="NMFS")])
head(tm_tx$tm)
tm_tx$tm$Lead_Region[which(tm_tx$tm,tm_tx$tm$Lead_Region !="NMFS")] <- paste("Region",tm_tx$tm$Lead_Region[which(tm_tx$tm, tm_tx$tm$Lead_Region !="NMFS")])
tm_tx$tm$Lead_Region[which(tm_tx$tm$Lead_Region !="NMFS")] <- paste("Region",tm_tx$tm$Lead_Region[which(tm_tx$tm$Lead_Region !="NMFS")])
head(tm_tx$tm)
tm_tx <- treemap(regions,
index = c("Lead_Region", "Status"),
vSize = "count", type = "categorical", vColor = "Status",
fontsize.labels = c(16, 0),
align.labels = list(c("left","top"), c("center","center")),
bg.labels = 0, palette = list_pal)
tm_tx$tm$color[tm_tx$tm$level == 1] <- NA
tm_tx$tm$Lead_Region <- as.character(tm_tx$tm$Lead_Region)
tm_tx$tm$Lead_Region[which(tm_tx$tm$Lead_Region !="NMFS")] <- paste("Region",tm_tx$tm$Lead_Region[which(tm_tx$tm$Lead_Region !="NMFS")])
head(tm_tx$tm)
tm_tx
plot(tm_tx)
highchart()%>%
hc_add_series_treemap(tm_tx, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1,
borderColor = "black",
borderWidth = 5,
dataLabels = list(enabled = "true",
align = "left",
verticalAlign = "top")),
list(level = 2,
borderColor = "grey",
borderWidth = 3,
dataLabels = list(enabled = "true",
align = "center",
verticalAlign = "middle"))))%>%
hc_title(text = "ESA Listings")%>%
hc_tooltip(pointFormat = "<b>{point.name}<\b><br>
Listings: {point.value}")
highchart()%>%
hc_add_series_treemap(tm_rg, allowDrillToNode = TRUE, layoutAlgorithm = "squarified",
levels = list(list(level = 1,
borderColor = "black",
borderWidth = 5,
dataLabels = list(enabled = "true",
align = "left",
verticalAlign = "top")),
list(level = 2,
borderColor = "grey",
borderWidth = 3,
dataLabels = list(enabled = "true",
align = "center",
verticalAlign = "middle"))))%>%
hc_title(text = "ESA Listings")%>%
hc_tooltip(pointFormat = "<b>{point.name}<\b><br>
Listings: {point.value}")
shiny::runApp('inst/listings-summary')
shiny::runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
getwd()
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
num_pr <- nrow(filter(TECP_domestic, Federal_Listing_Status == starts_with("Proposed")))
num_pr <- nrow(filter(TECP_domestic, Federal_Listing_Status == "^Proposed"))
num_pr
runApp('inst/listings-summary')
num_pr <- nrow(filter(TECP_domestic, startswith(Federal_Listing_Status, "Proposed")))
num_pr <- nrow(filter(TECP_domestic, startsWith(Federal_Listing_Status, "Proposed")))
num_pr
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
}
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
regions$Lead_Region[regions$Lead_Region != "NMFS"] <- paste("Region", regions$Lead_Region[regions$Lead_Region != "NMFS"]
)
filter(regions, Lead_Region == "*")
filter(regions, Lead_Region == "^")
filter(regions, !is.na(Lead_Region))
grep("",regions$Lead_Region)
filter(regions, Lead_Region == "")
list("All"="",unique(regions$Group) = unique(regions$Group))
list("All"="")
list("All"="",unique(regions$Group))
filter(regions,Group == "Lichens$")
filter(regions,Group == "Lichens^")
filter(regions,grep("Lichens",Group))
filter(regions,grepl("Lichens",Group))
regions$Group[regions$Group == "Lichens"]<-"Plants and Lichens"
setNames(as.list("",unique(regions$Group)),"All",unique(regions$Group)))
setNames(as.list("",unique(regions$Group)),"All",unique(regions$Group))
setNames(as.list("",unique(regions$Group)),c("All",unique(regions$Group)))
setNames(as.list(c("",unique(regions$Group))),c("All",unique(regions$Group)))
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
library(ecosscraper)
library(dplyr)
shiny::runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
head(regions)
unique(regions$Lead_Region)
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
filter(regions, grepl("Region 1", Lead_Region))
runApp('inst/listings-summary')
runApp('inst/listings-summary')
list_pal
runApp('inst/listings-summary')
names(list_pal)<-unique(regions$Status)
list_pal
unique(regions$Status)
list_pal <- c("orange", "red", "black", "green", "yellow", "purple")
names(list_pal)<-unique(regions$Status)
list_pal
list_pal%in%regions$Status
head(regions$Status%in%list_pal)
head(regions$Status%in%names(list_pal))
head(names(list_pal)%in%regions$Status)
spec_pal <- list_pal[names(list_pal)%in%filter(region, Group == "Birds")$Status]
spec_pal <- list_pal[names(list_pal)%in%filter(regions, Group == "Birds")$Status]
spec_pal
runApp('inst/listings-summary')
runApp('inst/listings-summary')
str(spec_pal)
runApp('inst/listings-summary')
list_pal<-unique(regions$Status)
names(list_pal) <- c("orange", "red", "black", "green", "yellow", "purple")
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
names(spec_pal)
list_pal
list_pal<-unique(regions$Status)
names(list_pal) <- c("orange", "red", "black", "green", "yellow", "purple")
list_pal
names(list_pal)
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
nrow(species)
hchart(species, type = "line", x = row_number(count)/nrow(species), y = count)%>%
hc_title(text = "Range Sizes of Listed Species", align = "center")%>%
hc_yAxis(title = list(text = "Log Counties in Species Range"),
type = "logarithmic")%>%
hc_xAxis(title = list(text = "Percentage of Listed Species"),
max = 1, showFirstLabel = "false")%>%
hc_tooltip(pointFormat = "Counties in Range: {point.y}<br>
# Species: {point.x * 1480}")
hchart(species, type = "line", x = row_number(count)/nrow(species), y = count)%>%
hc_title(text = "Range Sizes of Listed Species", align = "center")%>%
hc_yAxis(title = list(text = "Log Counties in Species Range"),
type = "logarithmic")%>%
hc_xAxis(title = list(text = "Percentage of Listed Species"),
max = 1, showFirstLabel = FALSE)%>%
hc_tooltip(pointFormat = "Counties in Range: {point.y}<br>
# Species: {point.x * 1480}")
hchart(species, type = "line", x = row_number(count)/nrow(species), y = count)%>%
hc_title(text = "Range Sizes of Listed Species", align = "center")%>%
hc_yAxis(title = list(text = "Log Counties in Species Range"),
type = "logarithmic")%>%
hc_xAxis(title = list(text = "Percentage of Listed Species"),
max = 1, min = 0)%>%
hc_tooltip(pointFormat = "Counties in Range: {point.y}<br>
# Species: {point.x * 1480}")
hchart(species, type = "line", x = row_number(count)/nrow(species), y = count)%>%
hc_title(text = "Range Sizes of Listed Species", align = "center")%>%
hc_yAxis(title = list(text = "Log Counties in Species Range"),
type = "logarithmic", tickColor = "black")%>%
hc_xAxis(title = list(text = "<b>Percentage of Listed Species<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black")%>%
hc_tooltip(headerFormat = "% of Species<br>",
pointFormat = "Counties in Range: {point.y}<br>
# Species: {1480}")
hchart(species, type = "line", x = row_number(count)/nrow(species), y = count)%>%
hc_title(text = "Range Sizes of Listed Species", align = "center")%>%
hc_yAxis(title = list(text = "<b>Counties in Species Range<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Listed Species<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Species: {point.x}<br>",
pointFormat = "Counties in Range: {point.y}")
hchart(species, type = "line", x = round(row_number(count)/nrow(species),2), y = count)%>%
hc_title(text = "Range Sizes of Listed Species", align = "center")%>%
hc_yAxis(title = list(text = "<b>Counties in Species Range<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Listed Species<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Species: {point.x}<br>",
pointFormat = "Counties in Range: {point.y}")
hchart(counties, type = "line", x = row_number(count)/nrow(species), y = count)%>%
hc_title(text = "Range Sizes of Listed Species", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(counties, type = "line", x = row_number(count)/nrow(counties), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(counties, type = "point", x = row_number(count)/nrow(counties), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(counties, type = "point", x = round(row_number(count)/nrow(counties), 2), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(counties, type = "spline", x = round(row_number(count)/nrow(counties), 2), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(counties, type = "point", x = round(row_number(count)/nrow(counties), 2), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(counties, type = "scatter", x = round(row_number(count)/nrow(counties), 2), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(counties, type = "scatter", x = round(row_number(count)/nrow(counties), 2), y = count, lineWidth = 5)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(counties, type = "scatter", x = round(row_number(count)/nrow(counties), 2), y = count, lineWidth = 5, dashStyle = "Solid")%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(counties, type = "scatter", x = round(row_number(count)/nrow(counties), 2), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(arrange(counties,count), type = "scatter", x = round(row_number(count)/nrow(counties), 2), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(arrange(counties,count), type = "line", x = round(row_number(count)/nrow(counties), 2), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
filter(counties,count==0)
filter(counties,count==1)
hchart(arrange(counties,count), type = "line", x = round(row_number(count)/nrow(counties), 3), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hist(counties$count)
hist(counties$count,breaks = 20)
hist(counties$count,breaks = 100)
hchart(counties$count)
hchart(counties$count)%>%
hc_xAxis(type = "logarithmic")
hchart(species$count)%>%
hc_Axis(type = "logarithmic")
hchart(species$count)%>%
hc_xAxis(type = "logarithmic")
hchart(density(species$count))
hchart(density(species$count))%>%
hc_xAxis(type = "logarithmic")
hchart(density(counties$count))%>%
()
hchart(density(counties$count))
hchart(arrange(counties,count), type = "line", x = round(row_number(count)/nrow(counties), 3), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic",
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
hchart(arrange(counties,count), type = "line", x = round(row_number(count)/nrow(counties), 3), y = count)%>%
hc_title(text = "Listed Species per County", align = "center")%>%
hc_yAxis(title = list(text = "<b>Listed Species in County<b>", style = list(color = "black")),
type = "logarithmic", min = 1,
labels = list(style = list(color = "black")))%>%
hc_xAxis(title = list(text = "<b>Percentage of Counties<\b>", style = list(color = "black")),
max = 1, min = 0, tickColor = "black",
labels = list(style = list(color = "black")))%>%
hc_tooltip(headerFormat = "% of Counties: {point.x}<br>",
pointFormat = "Species in County: {point.y}")
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
runApp('inst/listings-summary')
load("C:/Users/mevans/repos/esasummary/TECP.RData")
TECP_date <- filter(TECP,Lead_Region != "Foreign")
save.image("C:/Users/mevans/repos/esasummary/.RData")
head(as.date(substr(TECP$First_Listed,9,12)))
head(substr(TECP$First_Listed,9,12))
head(substr(TECP$First_Listed,9,12),20)
head(substr(TECP$First_Listed,9,12),50)
head(substr(TECP$First_Listed,9,12),100)
